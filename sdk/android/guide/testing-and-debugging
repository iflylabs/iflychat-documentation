###Testing and Debugging

**Testing**

Whenever an error occur in any iFlyChatLibrary method an intent will be broadcasted with an iFlyChatError object. To test the working of your app with iFlyChatLibrary, you need to add iFlyChat.onError action to your intent filter in onStart() method. 

To listen to this broadcast and receive the event(iFlyChat.onError). The user needs to match the intent action in the application's onReceive() method. To retrieve the iFlyChatError object. Firstly, user needs to create and initialize the Bundle type object (bundleData). Then user can get iFlyChatError object by calling getParcellable("error") method on bundleData a Bundle type object :
<code>
if(intent.getAction().equals("iFlyChat.onError")){
    Bundle bundleData = intent.getExtras();
    iFlyChatError error = bundleData.getParcelable("error");
    Log.e("iFlyChat.onError","Error code is: " + error.getCode() + " with message: " 
    + error.getMessage() + " and source: " + error.getSource());
}
</code>
<br>

There are several getter methods which gives you some properties of the iFlyChatError object. Which you can use to get the iFlyChatLibrary generated error codes, reason of error, class and method where error has occurred. These getter methods are explained in the javadoc of the iFlyChatLibrary.

<br>

**Debugging**

To help you debug fast, several logs are set on constructors, methods and event broadcast. These logs will tell you whether a constructor, method and event broadcast resulted in success or an error. 

To enable debugging in iFlyChatLibrary, you need to call setIsDebug(true) method of the iFlyChatUtilities class of iFlyChatLibrary. By default it is set to false.
<code>
iFlyChatUtilities.setIsDebug(true);
</code>
<br>
To see the successful logs in logcat of android studio. You can select log level as "info".

To see the unsuccessful/error logs in logcat of android studio. You can select log level as "Error".
